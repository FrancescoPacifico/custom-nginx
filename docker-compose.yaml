services:
  cadvisor:
    image: "gcr.io/cadvisor/cadvisor-arm64:v0.49.1"
    container_name: "cadvisor"
    hostname: "cadvisor"
    restart: unless-stopped
    ports:
      - 8081:8080
    environment:
      TZ: ${TZ}
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg

  mariadb:
    image: "jc21/mariadb-aria:latest"
    container_name: "mariadb"
    hostname: "mariadb"
    restart: unless-stopped
    environment:
      TZ: ${TZ}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MARIADB_AUTO_UPGRADE: ${MARIADB_AUTO_UPGRADE}
    volumes:
      - ./data/mariadb:/var/lib/mysql

  wetty:
    image: "wettyoss/wetty:latest"
    container_name: "wetty"
    hostname: "wetty"
    restart: unless-stopped
    ports:
      - 8082:3000
    environment:
      TZ: ${TZ}
    command: --ssh-host=${SSH_HOST}

  nginx:
    build:
      context: docker/nginx
      args:
        EMAIL: ${EMAIL}
    container_name: "nginx"
    hostname: "nginx"
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
      - 8083:81
    environment:
      TZ: ${TZ}
      DB_MYSQL_HOST: "mariadb"
      DB_MYSQL_PORT: ${DB_MYSQL_PORT}
      DB_MYSQL_USER: ${MYSQL_USER}
      DB_MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      DB_MYSQL_NAME: ${MYSQL_DATABASE}
      DISABLE_IPV6: ${DISABLE_IPV6}
    volumes:
      - ./data/nginx:/data
      - ./data/nginx/letsencrypt:/etc/letsencrypt
    depends_on:
      - mariadb

  fail2ban:
    build:
      context: docker/fail2ban
    container_name: "fail2ban"
    hostname: "fail2ban"
    restart: unless-stopped
    network_mode: "host"
    cap_add:
      - NET_ADMIN
      - NET_RAW
    environment:
      TZ: ${TZ}
      F2B_LOG_TARGET: "/var/log/fail2ban/fail2ban.log"
      F2B_LOG_LEVEL: ${F2B_LOG_LEVEL}
      F2B_DB_PURGE_AGE: ${F2B_DB_PURGE_AGE}
      SSMTP_HOST: ${SSMTP_HOST}
      SSMTP_PORT: ${SSMTP_PORT}
      SSMTP_HOSTNAME: ${SSMTP_HOSTNAME}
      SSMTP_USER: ${EMAIL}
      SSMTP_PASSWORD: ${SSMTP_PASSWORD}
      SSMTP_TLS: ${SSMTP_TLS}
      SSMTP_STARTTLS: ${SSMTP_STARTTLS}
    volumes:
      - ./data/fail2ban:/var/log/fail2ban
      - ./data/nginx/logs:/var/log/nginx:ro
    depends_on:
      - nginx

  log.io-server:
    build:
      context: docker/log.io-server
    container_name: "log.io-server"
    hostname: "log.io-server"
    restart: unless-stopped
    ports:
      - 8084:6688
    environment:
      TZ: ${TZ}
      LOGIO_SERVER_CONFIG_PATH: "/server.json"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:6688"]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      - fail2ban

  log.io-file-input:
    build:
      context: docker/log.io-file-input
    container_name: "log.io-file-input"
    hostname: "log.io-file-input"
    restart: unless-stopped
    environment:
      TZ: ${TZ}
      LOGIO_FILE_INPUT_CONFIG_PATH: "/file-input.json"
    volumes:
      - ./data/nginx/logs:/var/log/nginx:ro
      - ./data/fail2ban:/var/log/fail2ban:ro
    depends_on:
      log.io-server:
        condition: service_healthy
